{"ast":null,"code":"import { isNullOrUndefined } from './is';\nvar WAN = 10000;\nvar YI = 100000000;\n/**\n * 保留size位小数\n * 超过省略，不超过不处理\n * 1.0334 -> 1.03\n * 1.0 -> 1.0\n */\n\nexport var parseFixed = function parseFixed(val) {\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  if (isNullOrUndefined(val) || Number.isNaN(val)) {\n    return '-';\n  }\n  /**\n   * 判断小数点后位数\n   */\n\n\n  var after = String(val).split('.')[1] || '';\n  var afterLength = after.length;\n  var isOver = afterLength > size;\n  return isOver ? Number(val).toFixed(size) : String(val);\n};\n/**\n * 单位化\n */\n\nexport var parseUnit = function parseUnit(val) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (isNullOrUndefined(val) || Number.isNaN(val)) {\n    return '-';\n  }\n\n  if (val < 0) {\n    prefix += '-';\n  }\n\n  val = Math.abs(val);\n  var hasWan = val >= WAN; // 小于1万的没有单位\n\n  if (!hasWan) {\n    return prefix + parseFixed(val);\n  }\n\n  var hasYI = val >= YI;\n\n  if (hasYI) {\n    // 大于等于1亿\n    var valByYI = val / YI;\n    var valByYIFixed = parseFixed(valByYI);\n    var resultNum = valByYIFixed;\n    var suffix = '亿';\n    return prefix + resultNum + suffix;\n  } else {\n    // 小于1亿大于等于1w\n    var valByWan = val / WAN;\n    /**\n     * 保留size位小数\n     */\n\n    var valByWanFixed = parseFixed(valByWan);\n    var _resultNum = valByWanFixed;\n    var _suffix = 'w';\n    return prefix + _resultNum + _suffix;\n  }\n};\n/**\n * 数字逗号分割\n */\n\nexport var parseNumberSplit = function parseNumberSplit(val) {\n  var split = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var reg = /\\.\\d+/;\n  var num = (val || 0).toString();\n  var temp = reg.exec(num);\n  var decimal = temp && temp[0] ? temp[0] : '';\n  var decimalPointIndex = temp && temp.index ? temp.index : num.length;\n  var integerNum = num.slice(0, decimalPointIndex);\n  var result = '';\n\n  while (integerNum.length > 3) {\n    result = split + integerNum.slice(-3) + result;\n    integerNum = integerNum.slice(0, integerNum.length - 3);\n  }\n\n  if (integerNum) {\n    result = integerNum + result;\n  }\n\n  result = result + decimal;\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}