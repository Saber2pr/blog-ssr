{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { whenInDEV } from './whenInDEV';\nexport function collect(tree) {\n  var stack = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [tree];\n  var result = [];\n\n  while (stack.length) {\n    var node = stack.shift();\n    node === tree || result.push(node);\n    node.children && stack.push.apply(stack, _toConsumableArray(node.children));\n  }\n\n  whenInDEV(function () {\n    var chars = ['&', '.', '\\\\'];\n    result.forEach(function (_ref) {\n      var path = _ref.path;\n      chars.forEach(function (ch) {\n        if (path.includes(ch)) setTimeout(function () {\n          throw TypeError(\"path type error: \".concat(path, \"\\ninclude '\").concat(ch, \"'\"));\n        });\n      });\n    });\n  });\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}