{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport './style.less';\nimport classnames from 'classnames';\nimport { useRouter } from 'next/router';\nimport { useLayoutEffect, useRef } from 'react';\nimport { MainLayout } from '../../common/main-layout';\nimport { Icon, Link, Tree } from '../../components';\nimport { useAniLayout, useAsideHidable } from '../../hooks';\nimport { Md2jsx, md_theme } from '../../modules';\nimport { withPage } from '../../plugin/withPage';\nimport { useDispatchState, useSelectState } from '../../store';\nimport { addOriginHref, timeDeltaFromNow } from '../../utils';\nimport { findNodeByPath, queryRootFirstChildMemo } from '../../utils/parseTree';\n\nvar BLink = function BLink(props) {\n  var router = useRouter();\n  return __jsx(Link, _extends({\n    className: classnames('PageBlog-A', {\n      active: decodeURI(router === null || router === void 0 ? void 0 : router.asPath) === props.href\n    })\n  }, props));\n};\n\nexport var __N_SSP = true;\nexport default withPage(function (_ref) {\n  var tree = _ref.tree,\n      node = _ref.node;\n  var firstBlog = queryRootFirstChildMemo(tree);\n  var isOpen = useRef(false);\n  var aniBtnRef = useRef();\n\n  var _useAniLayout = useAniLayout(),\n      _useAniLayout2 = _slicedToArray(_useAniLayout, 3),\n      ref = _useAniLayout2[0],\n      open = _useAniLayout2[1],\n      close = _useAniLayout2[2];\n\n  var isMobile = false;\n\n  var getLastModified = function getLastModified(href) {\n    var _findNodeByPath;\n\n    return (_findNodeByPath = findNodeByPath(href, tree)) === null || _findNodeByPath === void 0 ? void 0 : _findNodeByPath['LastModified'];\n  };\n\n  var blogScrollTop = useSelectState('blogScrollTop');\n  var dispatch = useDispatchState();\n  useLayoutEffect(function () {\n    window.scroll(0, 0);\n    ref.current.scrollTop = blogScrollTop;\n    return function () {\n      dispatch('blogScrollTop', ref.current.scrollTop);\n    };\n  }, []);\n\n  var _useAsideHidable = useAsideHidable(ref),\n      _useAsideHidable2 = _slicedToArray(_useAsideHidable, 4),\n      main_ref = _useAsideHidable2[0],\n      btn_ref = _useAsideHidable2[1],\n      switchIsHide = _useAsideHidable2[2],\n      isShow = _useAsideHidable2[3];\n\n  return __jsx(MainLayout, {\n    className: \"PageBlog\",\n    title: \"\".concat(node === null || node === void 0 ? void 0 : node.title, \" - saber2pr\\u306E\\u7A9D\")\n  }, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(\"main\", {\n    className: \"PageBlog-Main\",\n    ref: main_ref\n  }, __jsx(\"h1\", {\n    className: \"PageBlog-Main-Title\"\n  }, node === null || node === void 0 ? void 0 : node.title), __jsx(\"div\", {\n    className: \"PageBlog-Main-Content\"\n  }, typeof (node === null || node === void 0 ? void 0 : node.content) === 'string' && __jsx(Md2jsx, {\n    theme: md_theme\n  }, node === null || node === void 0 ? void 0 : node.content), __jsx(\"div\", {\n    className: \"PageBlog-Main-Content-Edit\"\n  }, __jsx(\"a\", {\n    className: \"PageBlog-Main-Content-Edit-A\",\n    href: addOriginHref({\n      path: node === null || node === void 0 ? void 0 : node.path\n    })\n  }, \"\\u7F16\\u8F91\\u672C\\u9875\\u9762\")), __jsx(\"p\", {\n    className: \"PageBlog-Main-Content-Date\"\n  }, \"\\u6700\\u8FD1\\u66F4\\u65B0 \", timeDeltaFromNow(getLastModified(node === null || node === void 0 ? void 0 : node.path))))), __jsx(\"aside\", {\n    className: \"PageBlog-Aside\",\n    ref: ref\n  }, __jsx(\"div\", {\n    ref: btn_ref,\n    className: \"PageBlog-Aside-Btn\",\n    onClick: function onClick() {\n      return switchIsHide();\n    }\n  }, Icon.TreeBtn(isShow, '-90deg', '90deg', 'rotate')), tree && __jsx(\"section\", {\n    className: \"PageBlog-Aside-Content\"\n  }, __jsx(Tree, {\n    from: tree,\n    selectBtn: Icon.TreeBtn,\n    map: function map(_ref2) {\n      var href = _ref2.path,\n          title = _ref2.title,\n          children = _ref2.children;\n      if (href === (firstBlog === null || firstBlog === void 0 ? void 0 : firstBlog.path)) return __jsx(React.Fragment, null);\n      if (children) return __jsx(\"span\", null, title);\n      return __jsx(BLink, {\n        href: href,\n        onClick: function onClick() {\n          if (!isMobile) return;\n          isOpen.current = close(false);\n          aniBtnRef.current.close();\n        }\n      }, title);\n    }\n  })))));\n});","map":null,"metadata":{},"sourceType":"module"}