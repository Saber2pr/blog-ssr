{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport './style.less';\nimport React, { useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useUnMount } from '../../hooks/useUnMount';\nimport { checkIsMob } from '../../utils/checkIsMob';\nexport var Model = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var inner = _ref.inner,\n      onClickBg = _ref.onClickBg;\n  return __jsx(\"div\", {\n    className: \"Model\",\n    onClick: onClickBg,\n    ref: ref\n  }, __jsx(\"div\", {\n    className: \"Model-Box\",\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    }\n  }, inner));\n});\nexport var useModel = function useModel(Inner) {\n  var _useState = useState(__jsx(React.Fragment, null)),\n      model = _useState[0],\n      setModel = _useState[1];\n\n  var ref = useRef();\n\n  var open = function open() {\n    if (!ref.current) {\n      var container = document.createElement('div');\n      document.body.append(container);\n      ref.current = container;\n    }\n\n    setModel( /*#__PURE__*/ReactDOM.createPortal(__jsx(Model, {\n      onClickBg: close,\n      inner: Inner\n    }), ref.current));\n  };\n\n  var close = function close() {\n    return setModel(__jsx(React.Fragment, null));\n  };\n\n  useUnMount(function () {\n    return ref.current && document.body.removeChild(ref.current);\n  });\n  return [model, function () {\n    var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return show ? open() : close();\n  }];\n};\n\nModel.alert = function (message) {\n  var container = document.createElement('div');\n  document.body.append(container);\n\n  var close = function close() {\n    return ReactDOM.unmountComponentAtNode(container) && document.body.removeChild(container);\n  };\n\n  ReactDOM.render(__jsx(Model, {\n    onClickBg: close,\n    inner: message({\n      close: close\n    })\n  }), container);\n};\n\nModel.Hidable = function (message) {\n  var onClickBg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (_ref2) {\n    var closeAnimated = _ref2.closeAnimated;\n    return closeAnimated();\n  };\n  var container = document.createElement('div');\n  document.body.append(container);\n  var control_ref = /*#__PURE__*/React.createRef();\n\n  var close = function close() {\n    return ReactDOM.unmountComponentAtNode(container) && document.body.removeChild(container);\n  };\n\n  var hide = function hide() {\n    control_ref.current.style.left = '-100%';\n    control_ref.current.style.opacity = '0';\n  };\n\n  var show = function show() {\n    control_ref.current.style.left = '0';\n    control_ref.current.style.opacity = '1';\n  };\n\n  ReactDOM.render(__jsx(Model, {\n    onClickBg: function (_onClickBg) {\n      function onClickBg() {\n        return _onClickBg.apply(this, arguments);\n      }\n\n      onClickBg.toString = function () {\n        return _onClickBg.toString();\n      };\n\n      return onClickBg;\n    }(function () {\n      hide();\n      onClickBg({\n        close: close,\n        hide: hide,\n        show: show,\n        closeAnimated: function closeAnimated() {\n          return setTimeout(function () {\n            return close();\n          }, 1000);\n        }\n      });\n    }),\n    ref: control_ref,\n    inner: message({\n      close: close,\n      hide: hide,\n      show: show\n    })\n  }), container);\n};\n\nvar createFrame = function createFrame(html, close) {\n  var _document$documentEle = document.documentElement,\n      clientWidth = _document$documentEle.clientWidth,\n      clientHeight = _document$documentEle.clientHeight;\n  var parser = new DOMParser();\n  var doc = parser.parseFromString(html, 'text/html');\n  var style = document.createElement('style');\n  var isMob = checkIsMob();\n  style.innerHTML = \"body{padding-bottom:\".concat(isMob ? '40px' : '0px', \";background-color:white}\");\n  doc.head.append(style);\n  var ratio = isMob ? [0.9, 0.8] : [0.8, 0.8];\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    className: \"ButtonHigh\",\n    onClick: function onClick() {\n      return close();\n    },\n    style: _objectSpread({\n      position: 'absolute'\n    }, isMob ? {\n      left: 8,\n      bottom: 8\n    } : {\n      top: 8,\n      right: 8\n    })\n  }, \"\\u5173\\u95ED\"), __jsx(\"iframe\", {\n    frameBorder: \"0\",\n    style: {\n      borderRadius: 4\n    },\n    width: clientWidth * ratio[0],\n    height: clientHeight * ratio[1],\n    srcDoc: doc.documentElement.innerHTML\n  }));\n};\n\nexport var requestFrameModal = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(src) {\n    var html;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            LOADING.init();\n            _context.next = 3;\n            return fetch(src).then(function (res) {\n              return res.text();\n            });\n\n          case 3:\n            html = _context.sent;\n            LOADING.destroy();\n            Model.alert(function (_ref4) {\n              var close = _ref4.close;\n              return createFrame(html, function () {\n                close();\n                LOADING.destroy();\n              });\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function requestFrameModal(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}