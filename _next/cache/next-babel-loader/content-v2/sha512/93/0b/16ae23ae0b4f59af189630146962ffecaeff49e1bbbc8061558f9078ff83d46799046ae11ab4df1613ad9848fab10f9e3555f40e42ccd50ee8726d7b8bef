{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nvar show_ref = {\n  current: true\n};\nexport var useAsideHidable = function useAsideHidable(aside_ref) {\n  var main_ref = useRef();\n  var btn_ref = useRef();\n\n  var hidden = function hidden() {\n    main_ref.current.style.width = '80%';\n    main_ref.current.style.margin = '0 auto';\n    aside_ref.current.style.width = '0';\n    btn_ref.current.style.right = '0';\n    btn_ref.current.title = '展开';\n  };\n\n  var show = function show() {\n    main_ref.current.style.width = '70%';\n    main_ref.current.style.margin = '0';\n    aside_ref.current.style.width = '30%';\n    btn_ref.current.style.right = 'auto';\n    btn_ref.current.title = '收起';\n  };\n\n  var _useState = useState(show_ref.current),\n      isShow = _useState[0],\n      setIsShow = _useState[1];\n\n  var select = function select() {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isShow;\n\n    if (value) {\n      hidden();\n      setIsShow(false);\n      show_ref.current = false;\n    } else {\n      show();\n      setIsShow(true);\n      show_ref.current = true;\n    }\n  };\n\n  useEffect(function () {\n    if (document.documentElement.clientWidth < 760) return;\n    show_ref.current ? show() : hidden();\n  }, []);\n  return [main_ref, btn_ref, select, isShow];\n};","map":null,"metadata":{},"sourceType":"module"}