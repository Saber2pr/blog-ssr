{"ast":null,"code":"import { whenInDEV } from './whenInDEV';\nexport function collect(tree, stack = [tree]) {\n  const result = [];\n\n  while (stack.length) {\n    const node = stack.shift();\n    node === tree || result.push(node);\n    node.children && stack.push(...node.children);\n  }\n\n  whenInDEV(() => {\n    const chars = ['&', '.', '\\\\'];\n    result.forEach(({\n      path\n    }) => {\n      chars.forEach(ch => {\n        if (path.includes(ch)) setTimeout(() => {\n          throw TypeError(`path type error: ${path}\\ninclude '${ch}'`);\n        });\n      });\n    });\n  });\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}