{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport './style.less';\n/*\n * @Author: saber2pr\n * @Date: 2019-07-21 18:41:09\n * @Last Modified by: saber2pr\n * @Last Modified time: 2019-11-18 13:31:38\n */\n\nimport React, { useState } from 'react';\nexport function Ul(_ref) {\n  let {\n    children,\n    node,\n    index = 0,\n    render,\n    selectBtn = isActive => __jsx(\"span\", null, isActive ? \"X\" : \"O\")\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"node\", \"index\", \"render\", \"selectBtn\"]);\n\n  const {\n    0: state,\n    1: setState\n  } = useState(!!node.expand);\n  node.expand = state;\n\n  const change = () => setState(!state);\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: \"Ul-Btn\",\n    onClick: change\n  }, selectBtn(state)), __jsx(\"span\", {\n    className: `Ul-Name${state ? \" Ul-Name-Active\" : \"\"}`,\n    onClick: change\n  }, render(node, index)), __jsx(\"ul\", _extends({\n    className: \"Ul\"\n  }, props), state ? children : __jsx(React.Fragment, null)));\n}","map":null,"metadata":{},"sourceType":"module"}