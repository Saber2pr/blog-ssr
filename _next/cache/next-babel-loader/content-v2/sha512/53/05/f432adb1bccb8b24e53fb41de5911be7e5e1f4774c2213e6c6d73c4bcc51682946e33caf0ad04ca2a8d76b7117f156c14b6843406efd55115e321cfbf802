{"ast":null,"code":"import axios from 'axios';\nimport { parse } from 'url';\nimport { getOrigin } from '../../../api/utils';\nimport { KEYS } from '../../../utils/constants';\nimport { createError } from '../../../utils/createError';\nexport const config = {\n  api: {\n    bodyParser: {\n      sizeLimit: '1mb'\n    }\n  }\n};\n/**\n * > 用于客户端请求的反向代理\n * requestAPi /utils/proxy?url=https://xxx.com\n */\n\nexport default (async (req, res) => {\n  var _req$query, _req$headers;\n\n  const url = (_req$query = req.query) === null || _req$query === void 0 ? void 0 : _req$query.url;\n  const method = req.method;\n  const body = req.body;\n  const headers = (_req$headers = req.headers) !== null && _req$headers !== void 0 ? _req$headers : {};\n  headers.host = parse(url).host;\n\n  try {\n    const apiRes = await axios({\n      url: encodeURI(url),\n      data: body,\n      method: method,\n      headers\n    });\n    res.writeHead(200, {\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Origin': getOrigin()\n    });\n    const response = apiRes.data;\n    res.end(typeof response === 'object' ? JSON.stringify(apiRes.data) : response);\n  } catch (error) {\n    res.end(JSON.stringify({\n      [KEYS.error]: createError(error)\n    }));\n  }\n});","map":null,"metadata":{},"sourceType":"module"}