{"ast":null,"code":"import _Space from \"antd/lib/space\";\nimport _Avatar from \"antd/lib/avatar\";\nimport _Typography from \"antd/lib/typography\";\nvar __jsx = React.createElement;\nimport './style.less';\nimport classnames from 'classnames';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { Link } from '../../components/link';\nconst {\n  Text\n} = _Typography;\nconst NavLinks = [{\n  name: '首页',\n  href: '/'\n}, {\n  name: '动态',\n  href: '/activity'\n}, {\n  name: '笔记',\n  href: '/blog/永恒の幻想乡'\n}, {\n  name: '关于',\n  href: '/about'\n}, {\n  name: '链接',\n  href: '/links'\n}];\nexport const MainHeader = ({}) => {\n  const router = useRouter();\n  const pathname = router.asPath;\n  return __jsx(\"div\", {\n    className: \"MainHeader flex\"\n  }, __jsx(\"nav\", {\n    className: \"MainHeader-Nav\"\n  }, __jsx(\"ul\", {\n    className: \"NavList flex align-items-center\"\n  }, NavLinks.map(({\n    name,\n    href\n  }) => {\n    const isActive = href === '/' ? pathname === href : href === NavLinks[2].href ? pathname.startsWith('/blog') : href === pathname;\n\n    let content = __jsx(React.Fragment, null, name);\n\n    if (href === '/') {\n      content = __jsx(_Space, {\n        style: {\n          height: '100%'\n        },\n        direction: \"horizontal\"\n      }, __jsx(_Avatar, {\n        size: 32,\n        shape: \"circle\",\n        src: \"https://saber2pr.top/MyWeb/resource/image/saber2pr.webp\"\n      }), __jsx(Text, {\n        style: {\n          color: '#d5d5d7'\n        }\n      }, \"saber2pr\"));\n    }\n\n    return __jsx(\"li\", {\n      key: href,\n      className: classnames('NavList-Item', {\n        active: href === '/' ? false : isActive\n      })\n    }, __jsx(Link, {\n      className: \"NavList-Item-Anchor\",\n      href: href\n    }, content));\n  }))), __jsx(\"div\", {\n    className: \"MainHeader-Right\"\n  }, __jsx(\"a\", {\n    className: \"NavList-Item-Anchor\",\n    href: \"https://saber2pr.top/\"\n  }, \"\\u8BBF\\u95EEPWA\\u7248\")));\n};","map":null,"metadata":{},"sourceType":"module"}