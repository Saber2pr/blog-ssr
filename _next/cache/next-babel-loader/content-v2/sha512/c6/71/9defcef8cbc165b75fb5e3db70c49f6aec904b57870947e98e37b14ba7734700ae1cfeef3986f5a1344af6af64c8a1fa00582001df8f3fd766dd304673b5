{"ast":null,"code":"import memo from '@saber2pr/memo';\nexport const findNodeByPath = (path, entry) => {\n  const stack = entry ? [entry] : [];\n\n  while (stack.length) {\n    const node = stack.pop();\n    if (node.path === path) return node;\n    node.children && stack.push(...node.children);\n  }\n};\nexport const queryRootFirstChild = entry => {\n  if (entry) {\n    const children = entry.children;\n\n    for (const ch of children) {\n      if (!ch.children) return ch;\n    }\n  }\n};\nexport const queryRootFirstChildMemo = memo(queryRootFirstChild);","map":null,"metadata":{},"sourceType":"module"}