{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './style.less';\nimport classnames from 'classnames';\nimport { useRouter } from 'next/router';\nimport { useLayoutEffect, useRef } from 'react';\nimport { getContent } from '../../api/getContent';\nimport { getData } from '../../api/getData';\nimport { MainLayout } from '../../common/main-layout';\nimport { Icon, Link, Tree } from '../../components';\nimport { useAniLayout, useAsideHidable } from '../../hooks';\nimport { Md2jsx, md_theme } from '../../modules';\nimport { withAxios } from '../../plugin/withAxios';\nimport { withPage } from '../../plugin/withPage';\nimport { useDispatchState, useSelectState } from '../../store';\nimport { addOriginHref, getArray, timeDeltaFromNow } from '../../utils';\nimport { findNodeByPath, queryRootFirstChildMemo } from '../../utils/parseTree';\nexport const getServerSideProps = withAxios(async ({\n  get\n}, ctx) => {\n  var _ctx$params;\n\n  const tree = await getData('blog');\n  const path = `/blog/${getArray(ctx === null || ctx === void 0 ? void 0 : (_ctx$params = ctx.params) === null || _ctx$params === void 0 ? void 0 : _ctx$params.path).join('/')}`;\n  const node = findNodeByPath(decodeURI(path), tree);\n  const content = await getContent(node === null || node === void 0 ? void 0 : node.path);\n  return {\n    tree,\n    node: _objectSpread(_objectSpread({}, node), {}, {\n      content\n    })\n  };\n});\n\nconst BLink = props => {\n  const router = useRouter();\n  return __jsx(Link, _extends({\n    className: classnames('PageBlog-A', {\n      active: decodeURI(router === null || router === void 0 ? void 0 : router.asPath) === props.href\n    })\n  }, props));\n};\n\nexport default withPage(({\n  tree,\n  node\n}) => {\n  const firstBlog = queryRootFirstChildMemo(tree);\n  const isOpen = useRef(false);\n  const aniBtnRef = useRef();\n  const [ref, open, close] = useAniLayout();\n  const isMobile = false;\n\n  const getLastModified = href => {\n    var _findNodeByPath;\n\n    return (_findNodeByPath = findNodeByPath(href, tree)) === null || _findNodeByPath === void 0 ? void 0 : _findNodeByPath['LastModified'];\n  };\n\n  const blogScrollTop = useSelectState('blogScrollTop');\n  const dispatch = useDispatchState();\n  useLayoutEffect(() => {\n    window.scroll(0, 0);\n    ref.current.scrollTop = blogScrollTop;\n    return () => {\n      dispatch('blogScrollTop', ref.current.scrollTop);\n    };\n  }, []);\n  const [main_ref, btn_ref, switchIsHide, isShow] = useAsideHidable(ref);\n  return __jsx(MainLayout, {\n    className: \"PageBlog\",\n    title: `${node === null || node === void 0 ? void 0 : node.title} - saber2prの窝`\n  }, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(\"main\", {\n    className: \"PageBlog-Main\",\n    ref: main_ref\n  }, __jsx(\"h1\", {\n    className: \"PageBlog-Main-Title\"\n  }, node === null || node === void 0 ? void 0 : node.title), __jsx(\"div\", {\n    className: \"PageBlog-Main-Content\"\n  }, typeof (node === null || node === void 0 ? void 0 : node.content) === 'string' && __jsx(Md2jsx, {\n    theme: md_theme\n  }, node === null || node === void 0 ? void 0 : node.content), __jsx(\"div\", {\n    className: \"PageBlog-Main-Content-Edit\"\n  }, __jsx(\"a\", {\n    className: \"PageBlog-Main-Content-Edit-A\",\n    href: addOriginHref({\n      path: node === null || node === void 0 ? void 0 : node.path\n    })\n  }, \"\\u7F16\\u8F91\\u672C\\u9875\\u9762\")), __jsx(\"p\", {\n    className: \"PageBlog-Main-Content-Date\"\n  }, \"\\u6700\\u8FD1\\u66F4\\u65B0 \", timeDeltaFromNow(getLastModified(node === null || node === void 0 ? void 0 : node.path))))), __jsx(\"aside\", {\n    className: \"PageBlog-Aside\",\n    ref: ref\n  }, __jsx(\"div\", {\n    ref: btn_ref,\n    className: \"PageBlog-Aside-Btn\",\n    onClick: () => switchIsHide()\n  }, Icon.TreeBtn(isShow, '-90deg', '90deg', 'rotate')), tree && __jsx(\"section\", {\n    className: \"PageBlog-Aside-Content\"\n  }, __jsx(Tree, {\n    from: tree,\n    selectBtn: Icon.TreeBtn,\n    map: ({\n      path: href,\n      title,\n      children\n    }) => {\n      if (href === (firstBlog === null || firstBlog === void 0 ? void 0 : firstBlog.path)) return __jsx(React.Fragment, null);\n      if (children) return __jsx(\"span\", null, title);\n      return __jsx(BLink, {\n        href: href,\n        onClick: () => {\n          if (!isMobile) return;\n          isOpen.current = close(false);\n          aniBtnRef.current.close();\n        }\n      }, title);\n    }\n  })))));\n});","map":null,"metadata":{},"sourceType":"module"}