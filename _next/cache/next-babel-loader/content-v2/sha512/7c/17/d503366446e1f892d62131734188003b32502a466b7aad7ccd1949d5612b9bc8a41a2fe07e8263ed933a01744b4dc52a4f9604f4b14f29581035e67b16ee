{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nvar map = new Map();\nexport var useLoadScript = function useLoadScript(name, src) {\n  var deps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var ref = useRef();\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var loadLib = function loadLib() {\n    var cache = map.get(name) || {};\n    cache.lib = window[name];\n    map.set(name, cache);\n    ref.current = cache.lib;\n    setLoading(false);\n  };\n\n  useEffect(function () {\n    var cache = map.get(name) || {};\n\n    if (cache.lib) {\n      ref.current = cache.lib;\n      setLoading(false);\n      return;\n    }\n\n    if (cache.dom) {\n      cache.dom.addEventListener('load', loadLib);\n      return function () {\n        return cache.dom.removeEventListener('load', loadLib);\n      };\n    }\n\n    var script = document.createElement('script');\n    script.src = src;\n    script.type = 'text/javascript';\n    script.crossOrigin = 'true';\n    script.addEventListener('load', loadLib);\n    document.body.append(script);\n    cache.dom = script;\n    map.set(name, cache);\n    return function () {\n      return script.removeEventListener('load', loadLib);\n    };\n  }, deps);\n  return [ref.current, loading];\n};","map":null,"metadata":{},"sourceType":"module"}