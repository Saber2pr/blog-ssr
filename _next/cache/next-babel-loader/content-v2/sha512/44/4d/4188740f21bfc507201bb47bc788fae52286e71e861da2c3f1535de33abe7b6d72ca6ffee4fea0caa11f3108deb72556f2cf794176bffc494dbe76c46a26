{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _message from \"antd/lib/message\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useState } from 'react';\n/**\n * 同构渲染的数据请求方法\n * 用法参考：https://saber2pr.top/#/blog/Nextjs%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B8%B2%E6%9F%93/ssr%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84%E6%B3%A8%E6%84%8F%E4%B8%8E%E4%BC%98%E5%8C%96\n * @param request axios请求方法\n * @param initData 初始占位数据, 默认null\n * @param autoLoad 是否自动请求一次, 默认true\n */\n\nexport var useFetch = function useFetch(request) {\n  var initData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var autoLoad = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  var _useState = useState(initData),\n      result = _useState[0],\n      setResult = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var apiRes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setLoading(true);\n              _context.next = 4;\n              return request();\n\n            case 4:\n              apiRes = _context.sent;\n              setResult(apiRes.data);\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n              _message.error('获取数据失败');\n\n            case 12:\n              _context.prev = 12;\n              setLoading(false);\n              return _context.finish(12);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8, 12, 15]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    autoLoad && fetchData();\n  }, [autoLoad]);\n  return [result, loading, fetchData];\n};","map":null,"metadata":{},"sourceType":"module"}