{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport './style.less';\nimport React, { useMemo } from 'react';\nimport { Loading } from '../../../components';\nimport { useEcharts } from '../../../hooks';\nimport { collect, queryRootFirstChild } from '../../../utils';\nimport { useRouter } from 'next/router';\nexport var ChartPie = function ChartPie(_ref) {\n  var data = _ref.data,\n      title = _ref.title;\n  var router = useRouter();\n  var ds = useMemo(function () {\n    return collect(data);\n  }, [data]);\n\n  var _useMemo = useMemo(function () {\n    var map = {};\n    var sum = 0;\n    var result = ds.reduce(function (acc, item) {\n      map[item.title] = item;\n\n      if (item.children) {\n        return acc.concat({\n          name: item.title,\n          value: item.children.length\n        });\n      } else {\n        sum++;\n      }\n\n      return acc;\n    }, []);\n    return [result, map, sum];\n  }, [ds]),\n      pieData = _useMemo[0],\n      map = _useMemo[1],\n      sum = _useMemo[2];\n\n  var _useEcharts = useEcharts(function (chart) {\n    chart.on('click', 'series.pie.label', function (args) {\n      var _args$data;\n\n      if (map[args === null || args === void 0 ? void 0 : (_args$data = args.data) === null || _args$data === void 0 ? void 0 : _args$data.name]) {\n        var _args$data2;\n\n        var firstChild = queryRootFirstChild(map[args === null || args === void 0 ? void 0 : (_args$data2 = args.data) === null || _args$data2 === void 0 ? void 0 : _args$data2.name]);\n        router.push(firstChild.path);\n      }\n    });\n    chart.setOption({\n      title: {\n        text: \"\".concat(sum, \"\\u7BC7\"),\n        textStyle: {\n          fontSize: 20,\n          color: '#747474'\n        },\n        textAlign: 'center',\n        textVerticalAlign: 'center',\n        left: '50%',\n        top: '50%'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: function formatter(params) {\n          params = params[0] || params;\n          return params.marker + params.name + '<br/>' + params.value + ' ç¯‡';\n        }\n      },\n      grid: {\n        bottom: 30,\n        top: 30,\n        left: 30,\n        right: 30\n      },\n      series: [{\n        type: 'pie',\n        roseType: 'radius',\n        radius: ['40%', '70%'],\n        label: {\n          textBorderColor: 'transparent',\n          color: '#747474'\n        },\n        itemStyle: {\n          borderRadius: 4,\n          borderWidth: 2\n        },\n        data: pieData\n      }]\n    });\n  }, [pieData]),\n      _useEcharts2 = _slicedToArray(_useEcharts, 2),\n      ref = _useEcharts2[0],\n      loading = _useEcharts2[1];\n\n  return __jsx(\"div\", {\n    className: \"ChartPie\"\n  }, loading && __jsx(Loading, null), __jsx(\"h3\", {\n    className: \"title\"\n  }, title), __jsx(\"div\", {\n    className: \"chart\",\n    ref: ref\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}