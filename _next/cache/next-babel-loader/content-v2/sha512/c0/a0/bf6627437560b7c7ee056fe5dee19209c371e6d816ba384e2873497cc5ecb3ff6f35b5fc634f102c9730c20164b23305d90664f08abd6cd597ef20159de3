{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { memo } from 'react';\nimport { getContent } from '../../api/getContent';\nimport { Icon, Link } from '../../components';\nimport { addBlogLink } from '../../utils';\nexport const matchType = type => {\n  switch (type) {\n    case 'update':\n      return __jsx(\"p\", null, __jsx(Icon.Update, null), \"\\u66F4\\u65B0\");\n\n    case 'create':\n      return __jsx(\"p\", null, __jsx(Icon.Create, null), \"\\u521B\\u5EFA\");\n\n    case 'delete':\n      return __jsx(\"p\", null, __jsx(Icon.Delete, null), \"\\u5220\\u9664\");\n\n    default:\n      return __jsx(\"p\", null, __jsx(Icon.Idea, null), type);\n  }\n};\nexport const matchText = (type, text) => {\n  if (['create', 'update'].includes(type)) {\n    return __jsx(\"strong\", null, text.split('.')[0].split('/').pop());\n  }\n\n  if (type === 'delete') {\n    return text.split('.')[0].split('/').pop();\n  }\n\n  return text;\n};\nexport const Info = /*#__PURE__*/memo(({\n  path,\n  desc\n}) => {\n  const {\n    0: displayDesc,\n    1: setDisplayDesc\n  } = useState(desc);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const init = async () => {\n    try {\n      setLoading(true);\n      const desc = await getContent(path, true);\n      setDisplayDesc(desc);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (desc) {} else {\n      init();\n    }\n  }, [desc]);\n  return __jsx(\"div\", {\n    className: \"PageActivity-Info\"\n  }, __jsx(_Spin, {\n    spinning: loading\n  }, typeof displayDesc === 'string' ? `${displayDesc.slice(0, 60)}...` : '', __jsx(Link, {\n    className: \"AnchorHigh\",\n    href: addBlogLink({\n      path\n    })\n  }, \"\\u67E5\\u770B\\u5185\\u5BB9\")));\n});","map":null,"metadata":{},"sourceType":"module"}